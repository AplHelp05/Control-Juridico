@model SistemaControl.Models.DocumentoViewModel
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1">


<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
@*
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery-3.3.1.js"></script>

*@



<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <span class="modal-title" id="exampleModalLabel" style="text-align:center;">Crear documento</span>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div id="contenidoModal">
                @using (Html.BeginForm("CrearDocumento", "Documento"))
                {
                    @Html.AntiForgeryToken()
                    int i = 0;
                    <div class="form-horizontal" id="parent">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.idDocumento)


                        <div class="form-group">
                            @Html.LabelFor(model => model.idTipo, "Tipo de Documento:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idTipo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tipoOrigen, "Tipo de origen:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("tipoOrigen", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.tipoOrigen, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tipoOrigen, "Origen:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idOrigen", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idOrigen, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.numeroDocumento, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.numeroDocumento, new { htmlAttributes = new { @class = "form-control", placeholder = "MA-PSJ-#####-2018", autocomplete = "off", @id = "numeroDocumento" } })
                                @Html.ValidationMessageFor(model => model.numeroDocumento, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" id="numIngreso">
                            @Html.LabelFor(model => model.numeroIngreso, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.numeroIngreso, new { htmlAttributes = new { @class = "form-control", placeholder = "N.I.####-2018", autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.numeroIngreso, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.idEstado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idEstado", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idEstado, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fecha, "Fecha:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control" } })

                                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" id="Expediente">
                            @Html.LabelFor(model => model.ubicacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ubicacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.asunto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.asunto, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.asunto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.descripcion, 5, 62, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.observacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.observacion, 10, 62, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="btn btn-primary">
                            <div class="col-md-10">
                            </div>
                            <input type="file" id="imageBrowes" multiple="multiple" />
                        </div>
                        <div id="imgPreview" class="thumbnail" style="display:none">
                            <img class="img-responsive" id="targetImg" />
                            <div class="caption">
                                <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                <span id="description"></span>
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Crear documento" class="btn btn-default" />
                            <button type="button" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Cerrar</a></button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>
<style>
    .modal-open .ui-datepicker-div {
        position: sticky;
        top: 80px !important;
        right: 50px !important;
    }
</style>
<script type="text/javascript">

    $('#fecha').datepicker({
        dateFormat: 'yy-mm-dd',
        closeText: 'Cerrar',
        minDate: "0",
        maxDate: "0",
        yearRange: '1910:2018',
        language: "es",
        container: '#contenidoModal',
        beforeShow: function (input, inst) {
            var calendar = inst.dpDiv;
            setTimeout(function () {
                calendar.position({
                    my: 'center bottom',
                    at: 'top',
                    collision: 'none',
                    of: input
                });
            }, 1);
        }
    }).on('changeDate', function (ev) {
        $(this).blur();
    });
    $(document).ready(function () {
        if ($("#idOrigen").val() == "10")
        {
            $('#numeroDocumento').attr('placeholder', 'MA-PSI-####-2018');
        }
        $("#Expediente").hide();
            $("#tipoOrigen").change(function () {
                $("#idOrigen").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetTipoOrigen")', // we are calling json method
                dataType: 'json',
                data: { id: $("#tipoOrigen").val() },
                success: function (origins) {
                    var another = origins.Data;
                    console.log(another[0].Value);
                    $.each(another, function (i, state) {
                        $("#idOrigen").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
    $("#idOrigen").change(function ()
    {
        var nomenclatura;
        if ($("#tipoOrigen").val() == "5")
        {
            if ($("#idOrigen").val() == "10")
            {
                nomenclatura = "PSI-";
                $("#numeroDocumento").val('');
                $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
            }
            else
            {
                nomenclatura = "PRH-";
                $("#numeroDocumento").val('');
                $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
            }
        }
        else
        {
            nomenclatura = "PMM-";
            $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
        }
    }
    );
    $("#tipoOrigen").change(function () {
        if ($("#tipoOrigen").val() == "6")
        {
            $("#numeroDocumento").val('');
            $('#numeroDocumento').attr('placeholder', 'MA-PMM-####-2018');
        }
        else
        {
            $("#numeroDocumento").val('');
            $('#numeroDocumento').attr('placeholder', 'MA-PSI-####-2018');
        }
    }
    );
    $('#numeroDocumento').keydown(function (e)
    {
        var nomenclatura;
        if ($("#tipoOrigen").val()=="5")
        {
            if ($("#idOrigen").val() == "10")
            {
                nomenclatura = "PSI-";
            }
            else
            {
                nomenclatura = "PRH-";
            }
        }
        else
        {
            nomenclatura = "PMM-";
        }

        var key = e.key;
        var code = e.keyCode;
        var doc = $('#numeroDocumento').val();
        var comTotal = /MA-[A-Z]{3}-[0-9]{4}-2018$|EXP-MA-[0-9]{4}$/;
        var pat = /MA-[A-Z]{3}-[0-9]{3}$/;
        var expreg = /MA-[A-Z]{3}-[0-9]{4}$/;

        if (comTotal.test(doc) && code != 8 && code != 13&& code != 9) {
            event.preventDefault();
        }
        else {
            if ((code > 47 && code < 58) || /* numeric (0-9) (code > 64 && code < 91) || /* upper alpha (A-Z)*/ (code > 96 && code < 105))// lower alpha (a-z)
            {
                if ($('#idTipo').val() == "4")
                {
                    if (!doc.includes('EXP-MA-')) {
                        $('#numeroDocumento').val('EXP-MA-');
                    }
                    else {
                        $('#numeroDocumento').val(doc);
                    }
                }
                else
                {
                    if (!doc.includes('MA-' + nomenclatura)) {
                        $('#numeroDocumento').val('MA-' + nomenclatura);
                    }
                    else {
                        $('#numeroDocumento').val(doc);
                    }
                }
            }
            else if (code == 8) {
                var del = /2018$/;

                if (del.test(doc)) {
                    doc = doc.substring(0, doc.length - 5);
                    $('#numeroDocumento').val(doc);
                }
                else {
                    if (doc.length < 8) {

                        if ($('#idTipo').val() == "4")
                        {
                            if (!doc.includes('EXP-MA-'))
                            {
                                $('#numeroDocumento').val('EXP-MA-');
                                event.preventDefault();
                            }
                            else
                            {
                                event.preventDefault();
                            }
                        }
                        else
                        {
                            if (!doc.includes('MA-' + nomenclatura))
                            {
                                $('#numeroDocumento').val('MA-' + nomenclatura);
                                event.preventDefault();
                            }
                            else if (doc.includes('MA-' + nomenclatura))
                            {
                                event.preventDefault();
                            }
                        }
                    }
                }
            }
            else if ((code > 64 && code < 91)) {
                swal("¡Carácter invalido!", 'solo se permiten caracteres numéricos.', "error");
                event.preventDefault();
            }
            if (pat.test(doc)) {
                if ((code > 47 && code < 58) || (code > 96 && code < 105)) {
                    $('#numeroDocumento').val(doc + key + '-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
            else if (expreg.test(doc)) {

                if (code != 8) {
                    $('#numeroDocumento').val(doc + '-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
        }
    }
    );
    $('#numeroIngreso').keydown(function (e) {
        var key = e.key;
        var code = e.keyCode;
        var doc = $('#numeroIngreso').val();
        var comTotal = /N.I.[0-9]{4}-2018$/;
        var pat = /N.I.[0-9]{4}$/;
        var expreg = /N.I.[0-9]{3}$/;
        console.log(key);
        if (comTotal.test(doc) && code != 8 && code != 13 && code != 9)
        {
            event.preventDefault();
        }
        else {
            if ((code > 47 && code < 58) || /* numeric (0-9) (code > 64 && code < 91) || /* upper alpha (A-Z)*/ (code > 96 && code < 105))// lower alpha (a-z)
            {
                if (!doc.includes('N.I.')) {

                    $('#numeroIngreso').val('N.I.');
                }
                else {
                    $('#numeroIngreso').val(doc);
                }
            }
            else if (code == 8) {
                var del = /2018$/;
                if (del.test(doc)) {
                    doc = doc.substring(0, doc.length - 5);
                    $('#numeroIngreso').val(doc);
                }
                else {
                    if (doc.length < 5) {
                        if (!doc.includes('N.I.')) {
                            $('#numeroIngreso').val('N.I.');
                            event.preventDefault();
                        }
                        else if (doc.includes('N.I.') && key == 'Backspace') {
                            $('#numeroIngreso').val('N.I.');
                            event.preventDefault();
                        }
                    }
                }
            }
            else if ((code > 64 && code < 91))
            {
                swal("¡Carácter invalido!", 'solo se permiten caracteres numéricos.', "error");
                event.preventDefault();
            }
            if (pat.test(doc))
            {
                if ((code > 47 && code < 58) || (code > 96 && code < 105)) {
                    $('#numeroIngreso').val(doc + key + '-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
            else if (expreg.test(doc))
            {
                if (code != 8) {
                    $('#numeroIngreso').val(doc + key+'-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
        }
    }
    );
    $('#idTipo').change(function ()
    {
        var nomenclatura;
        if ($("#tipoOrigen").val() == "5")
        {
            if ($("#idOrigen").val() == "10")
            {
                nomenclatura = "PSI-";
            }
            else {
                nomenclatura = "PRH-";
            }
        }
        else
        {
            nomenclatura = "PMM-";
        }
        if ($('#idTipo').val() == "4")
        {
            $('#numeroDocumento').attr('placeholder', 'EXP-MA-####');
            $('#Expediente').show();
            $('#numIngreso').show();
            $('#numeroDocumento').val('');
            $('#numeroIngreso').val('');
        }
        else if ($('#idTipo').val() == "3")
        {
            $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
            $('#Expediente').hide();
            $('#numIngreso').show();
            $('#numeroDocumento').val('');
            $('#numeroIngreso').val('');
        }
        else
        {
            $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
            $('#numIngreso').hide();
            $('#Expediente').hide();
            $('#numeroDocumento').val('');
            $('#numeroIngreso').val('');
        }
    }
    );

    $(document).ready(function () {

        $("#imageBrowes").change(function () {

            var File = this.files;
            //var anyWindow = window.URL || window.webkitURL;
            //target = "#targetImg";
            //imgPreview = "#imgPreview";
            for (var i = 0; i < File.length; i++) {
                //    var objectUrl = anyWindow.createObjectURL(File[i]);
                //    $('.preview-area').append('<img class="img-responsive"src="' + objectUrl + '" />');
                //    window.URL.revokeObjectURL(File[i]);

                //}
                //    //if (i = 1) {
                //    //    target = target + "2";
                //    //    imgPreview = imgPreview + "2";
                //    //}
                ReadImage(File[i]);
            }
        })
    });
    var ReadImage = function (file) {

        var reader = new FileReader;
        var image = new Image;
        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 1024) + "KB";

                $("#targetImg").attr('src', _file.target.result);
                $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                $("#imgPreview").show();

            }

        }

    };
    var ClearPreview = function () {
        $("#imageBrowes").val('');
        $("#description").text('');
        $("#imgPreview").hide();
        $("#imgPreview2").hide();
    };
</script>
