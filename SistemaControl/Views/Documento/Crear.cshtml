@model SistemaControl.Models.DocumentoViewModel
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1">

<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
@*
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
*@
<style>
</style>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <span class="modal-title" id="exampleModalLabel" style="text-align:center;">Crear documento</span>
            <button type="button" onclick="closeModal" data-dismiss="modal" aria-label="Close">
                <span href="/Documento/Index" aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div id="contenidoModal">
                @using (Html.BeginForm("CrearDocumento", "Documento"))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal" id="parent">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.idDocumento)


                        <div class="form-group">
                            @Html.LabelFor(model => model.idTipo, "Tipo de Documento", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idTipo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tipoOrigen, "Tipo de origen", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("tipoOrigen", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.tipoOrigen, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.idOrigen, "Origen", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idOrigen", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idOrigen, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="partes">
                            @Html.LabelFor(model => model.parte, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.parte, new { htmlAttributes = new { @class = "form-control", placeholder = "EXP-AD-NOMBREDELAPERSONA-2018", autocomplete = "off", style = "text-transform: uppercase;" } })
                                @Html.ValidationMessageFor(model => model.parte, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.numeroDocumento, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.numeroDocumento, new { htmlAttributes = new { @class = "form-control", placeholder = "MA-PSI-#####-2018", autocomplete = "off", @id = "numeroDocumento" } })
                                @Html.ValidationMessageFor(model => model.numeroDocumento, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="numIngreso">
                            @Html.LabelFor(model => model.numeroIngreso, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.numeroIngreso, new { htmlAttributes = new { @class = "form-control", placeholder = "N.I.####-2018", autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.numeroIngreso, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.idEstado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idEstado", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idEstado, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fecha, "Fecha", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control" } })

                                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" id="Expediente">
                            @Html.LabelFor(model => model.ubicacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ubicacion, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", placeholder = "La ubicación física del documento." } })
                                @Html.ValidationMessageFor(model => model.ubicacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.asunto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.asunto, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", placeholder = "Asunto" } })
                                @Html.ValidationMessageFor(model => model.asunto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2", placeholder = "Descripción breve del documento." })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.descripcion, 5, 62, new { @class = "form-control", @style = "resize: vertical;min-height: 100px;" })
                                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.observacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.observacion, 10, 62, new { @class = "form-control", @style = "resize: vertical;min-height: 200px;" })
                                @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="btn btn-primary">
                            <div class="col-md-10">
                            </div>
                            <input type="file" id="imageBrowes" multiple="multiple" />
                        </div>
                        <div id="imgPreview" class="thumbnail" style="display:none">
                            <img class="img-responsive" id="targetImg" />
                            <div class="caption">
                                <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                <span id="description"></span>
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Crear documento" class="btn btn-default" />
                            <button type="button" onclick="closeModal()" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Cerrar</a></button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>
<style>
    .modal-open.ui-datepicker {
        /*width: 300px;
        height: 300px;*/
        margin: 5px auto 0;
        font: 12pt Arial, sans-serif;
    }

        .modal-open .ui-datepicker table {
            width: 100%;
            background-color: white;
        }

    .modal-open .ui-datepicker-header {
        background: #35475e;
        color: #ffffff;
        font-family: sans-serif;
        border-width: 1px 0 0 0;
        border-style: solid;
        border-color: #111;
    }

    .modal-open .ui-datepicker-title {
        text-align: center;
        font-size: 15px;
    }

    .modal-open .ui-datepicker-prev {
        float: left;
        cursor: pointer;
        background-position: center -30px;
    }

    .modal-open .ui-datepicker-next {
        float: right;
        cursor: pointer;
    }

    .modal-open .ui-datepicker select.ui-datepicker-month, .ui-datepicker select.ui-datepicker-year {
        width: 49%;
        color: black;
        font-family: sans-serif;
    }

    /*.modal-open .ui-datepicker-div {
        position: sticky;
        top: 80px !important;
        right: 50px !important;
    }*/
</style>
<script type="text/javascript">
    $('#fecha').datepicker({
        dateFormat: 'yy-mm-dd',
        closeText: 'Cerrar',
        minDate: "-1",
        maxDate: "0",
        yearRange: '1910:2018',
        language: "Es",
        regional: 'es',
        monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
        monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
        dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
        dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
        weekHeader: 'Sm',
        container: '#contenidoModal',
        beforeShow: function (input, inst) {
            var calendar = inst.dpDiv;
            setTimeout(function () {
                calendar.position({
                    my: 'center bottom',
                    at: 'bottom',
                    collision: 'none',
                    of: input
                });
            }, 1);
        }
    }).on('changeDate', function (ev) {
        $(this).blur();
    });
    $(document).ready(function () {
        if ($("#idOrigen").val() == "10")
        {
            $('#numeroDocumento').attr('placeholder', 'MA-PSI-####-2018');
        }
        $("#Expediente").hide();
        $("#partes").hide();

            $("#tipoOrigen").change(function () {
                $("#idOrigen").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetTipoOrigen")', // we are calling json method
                dataType: 'json',
                data: { id: $("#tipoOrigen").val() },
                success: function (origins) {
                    var another = origins.Data;
                    console.log(another[0].Value);
                    $.each(another, function (i, state) {
                        $("#idOrigen").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });


    $("#fecha").keydown(function () {
        event.preventDefault();
    }
    );

    $("#idOrigen").change(function ()
    {
        var nomenclatura;
        console.log(nomenclatura);
        console.log(nomenclatura);
        if ($("#tipoOrigen").val() == "5")
        {
            switch ($("#idOrigen").val())
            {
                case "10": nomenclatura = "PSI-";
                    break;
                case "11": nomenclatura = "PRH-";
                    break;
                case "24": nomenclatura = "AAM-";
                    break;
                case "25": nomenclatura = "SAAM-";
                    break;
                case "26": nomenclatura = "AAAA-";
                    break;
                case "27": nomenclatura = "SAT-";
                    break;
                case "28": nomenclatura = "A-";
                    break;
                case "29": nomenclatura = "AAP-";
                    break;
                case "30": nomenclatura = "AAPRT-";
                    break;
                case "31": nomenclatura = "AAS-";
                    break;
                case "32": nomenclatura = "PAM-";
                    break;
                case "33": nomenclatura = "ALCM-";
                    break;
                case "34": nomenclatura = "AAI-";
                    break;
                case "35": nomenclatura = "AI-";
                    break;
                case "36": nomenclatura = "ABI-";
                    break;
                case "37": nomenclatura = "ABM-";
                    break;
                case "38": nomenclatura = "ACE-";
                    break;
                case "39": nomenclatura = "ACM-";
                    break;
                case "40": nomenclatura = "CMEA-";
                    break;
                case "41": nomenclatura = "PCD-";
                    break;
                case "42": nomenclatura = "CM-";
                    break;
                case "43": nomenclatura = "SC-";
                    break;
                case "44": nomenclatura = "AAAACC-";
                    break;
                case "45": nomenclatura = "PCS-";
                    break;
                case "46": nomenclatura = "ACC-";
                    break;
                case "47": nomenclatura = "PCFU-";
                    break;
                case "48": nomenclatura = "SCI-";
                    break;
                case "49": nomenclatura = "SCP-";
                    break;
                case "50": nomenclatura = "ADM-";
                    break;
                case "51": nomenclatura = "AD-";
                    break;
                case "52": nomenclatura = "SDC-";
                    break;
                case "53": nomenclatura = "ADCDR-";
                    break;
                case "54": nomenclatura = "PDO-";
                    break;
                case "55": nomenclatura = "PDS-";
                    break;
                case "56": nomenclatura = "PDSCEC-";
                    break;
                case "57": nomenclatura = "DGP-";
                    break;
                case "58": nomenclatura = "SGA-";
                    break;
                case "59": nomenclatura = "AGC-";
                    break;
                case "60": nomenclatura = "AGIRS-";
                    break;
                case "61": nomenclatura = "SGV-";
                    break;
                case "62": nomenclatura = "PH-";
                    break;
                case "63": nomenclatura = "PHM-";
                    break;
                case "64": nomenclatura = "AIM-";
                    break;
                case "65": nomenclatura = "SIS-";
                    break;
                case "66": nomenclatura = "AJCA-";
                    break;
                case "67": nomenclatura = "ALV-";
                    break;
                case "68": nomenclatura = "AMPZV-";
                    break;
                case "69": nomenclatura = "AM-";
                    break;
                case "70": nomenclatura = "SOIP-";
                    break;
                case "71": nomenclatura = "AOM-";
                    break;
                case "72": nomenclatura = "APC-";
                    break;
                case "73": nomenclatura = "AP-";
                    break;
                case "74": nomenclatura = "PPCI-";
                    break;
                case "75": nomenclatura = "PP-";
                    break;
                case "76": nomenclatura = "SPU-";
                    break;
                case "77": nomenclatura = "APG-";
                    break;
                case "78": nomenclatura = "PRE-";
                    break;
                case "79": nomenclatura = "SP-";
                    break;
                case "80": nomenclatura = "SO-";
                    break;
                case "81": nomenclatura = "SM-";
                    break;
                case "82": nomenclatura = "PSMCV-";
                    break;
                case "83": nomenclatura = "SPSA-";
                    break;
                case "84": nomenclatura = "SSA-";
                    break;
                case "85": nomenclatura = "PSJ-";
                    break;
                case "86": nomenclatura = "SSISC-";
                    break;
                case "87": nomenclatura = "SSISCT-";
                    break;
                case "88": nomenclatura = "TM-";
                    break;
                case "89": nomenclatura = "ST-";
                    break;
                case "90": nomenclatura = "VA-";
                    break;
                default: nomenclatura = "PMM-";
                    break;
            }
        }
        else
        {
            nomenclatura = "PMM-";
        }
        $("#numeroDocumento").val('');
        $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
        console.log(nomenclatura);

        //if ($("#tipoOrigen").val() == "5")
        //{
        //    if ($("#idOrigen").val() == "10")
        //    {
        //        nomenclatura = "PSI-";
        //        $("#numeroDocumento").val('');
        //        $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
        //    }
        //    else
        //    {
        //        nomenclatura = "caca-";
        //        $("#numeroDocumento").val('');
        //        $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
        //    }
        //}
        //else
        //{
        //    nomenclatura = "PMM-";
        //    $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
        //}
    }
    );
    $("#tipoOrigen").change(function () {
        if ($("#tipoOrigen").val() == "6")
        {
            $("#numeroDocumento").val('');
            $('#numeroDocumento').attr('placeholder', 'MA-PMM-####-2018');
        }
        else
        {
            $("#numeroDocumento").val('');
            $('#numeroDocumento').attr('placeholder', 'MA-PSI-####-2018');
        }
    }
    );
    $('#numeroDocumento').keydown(function (e)
    {
        if ($("#tipoOrigen").val() == "5") {
            switch ($("#idOrigen").val()) {
                case "10": nomenclatura = "PSI-";
                    break;
                case "11": nomenclatura = "PRH-";
                    break;
                case "24": nomenclatura = "AAM-";
                    break;
                case "25": nomenclatura = "SAAM-";
                    break;
                case "26": nomenclatura = "AAAA-";
                    break;
                case "27": nomenclatura = "SAT-";
                    break;
                case "28": nomenclatura = "A-";
                    break;
                case "29": nomenclatura = "AAP-";
                    break;
                case "30": nomenclatura = "AAPRT-";
                    break;
                case "31": nomenclatura = "AAS-";
                    break;
                case "32": nomenclatura = "PAM-";
                    break;
                case "33": nomenclatura = "ALCM-";
                    break;
                case "34": nomenclatura = "AAI-";
                    break;
                case "35": nomenclatura = "AI-";
                    break;
                case "36": nomenclatura = "ABI-";
                    break;
                case "37": nomenclatura = "ABM-";
                    break;
                case "38": nomenclatura = "ACE-";
                    break;
                case "39": nomenclatura = "ACM-";
                    break;
                case "40": nomenclatura = "CMEA-";
                    break;
                case "41": nomenclatura = "PCD-";
                    break;
                case "42": nomenclatura = "CM-";
                    break;
                case "43": nomenclatura = "SC-";
                    break;
                case "44": nomenclatura = "AAAACC-";
                    break;
                case "45": nomenclatura = "PCS-";
                    break;
                case "46": nomenclatura = "ACC-";
                    break;
                case "47": nomenclatura = "PCFU-";
                    break;
                case "48": nomenclatura = "SCI-";
                    break;
                case "49": nomenclatura = "SCP-";
                    break;
                case "50": nomenclatura = "ADM-";
                    break;
                case "51": nomenclatura = "AD-";
                    break;
                case "52": nomenclatura = "SDC-";
                    break;
                case "53": nomenclatura = "ADCDR-";
                    break;
                case "54": nomenclatura = "PDO-";
                    break;
                case "55": nomenclatura = "PDS-";
                    break;
                case "56": nomenclatura = "PDSCEC-";
                    break;
                case "57": nomenclatura = "DGP-";
                    break;
                case "58": nomenclatura = "SGA-";
                    break;
                case "59": nomenclatura = "AGC-";
                    break;
                case "60": nomenclatura = "AGIRS-";
                    break;
                case "61": nomenclatura = "SGV-";
                    break;
                case "62": nomenclatura = "PH-";
                    break;
                case "63": nomenclatura = "PHM-";
                    break;
                case "64": nomenclatura = "AIM-";
                    break;
                case "65": nomenclatura = "SIS-";
                    break;
                case "66": nomenclatura = "AJCA-";
                    break;
                case "67": nomenclatura = "ALV-";
                    break;
                case "68": nomenclatura = "AMPZV-";
                    break;
                case "69": nomenclatura = "AM-";
                    break;
                case "70": nomenclatura = "SOIP-";
                    break;
                case "71": nomenclatura = "AOM-";
                    break;
                case "72": nomenclatura = "APC-";
                    break;
                case "73": nomenclatura = "AP-";
                    break;
                case "74": nomenclatura = "PPCI-";
                    break;
                case "75": nomenclatura = "PP-";
                    break;
                case "76": nomenclatura = "SPU-";
                    break;
                case "77": nomenclatura = "APG-";
                    break;
                case "78": nomenclatura = "PRE-";
                    break;
                case "79": nomenclatura = "SP-";
                    break;
                case "80": nomenclatura = "SO-";
                    break;
                case "81": nomenclatura = "SM-";
                    break;
                case "82": nomenclatura = "PSMCV-";
                    break;
                case "83": nomenclatura = "SPSA-";
                    break;
                case "84": nomenclatura = "SSA-";
                    break;
                case "85": nomenclatura = "PSJ-";
                    break;
                case "86": nomenclatura = "SSISC-";
                    break;
                case "87": nomenclatura = "SSISCT-";
                    break;
                case "88": nomenclatura = "TM-";
                    break;
                case "89": nomenclatura = "ST-";
                    break;
                case "90": nomenclatura = "VA-";
                    break;
                default: nomenclatura = "PMM-";
                    break;
            }
        }
        else {
            nomenclatura = "PMM-";
        }


        console.log(nomenclatura);
        //if ($("#tipoOrigen").val()=="5")
        //{
        //    if ($("#idOrigen").val() == "10")
        //    {
        //        nomenclatura = "PSI-";
        //    }
        //    else if ($("#idOrigen").val() == "10")
        //    {
        //        nomenclatura = "PSI-";
        //    }
        //    else if ($("#idOrigen").val() == "10")
        //    {
        //        nomenclatura = "PSI-";
        //    }
        //    else
        //    {
        //        nomenclatura = "PRH-";
        //    }
        //}
        //else
        //{
        //    nomenclatura = "PMM-";
        //}

        var key = e.key;
        var code = e.keyCode;
        var doc = $('#numeroDocumento').val();
        var comTotal = /MA-[A-ZÑ]{1,6}-[0-9]{4}-2018$/;
        var pat = /MA-[A-ZÑ]{1,6}-[0-9]{3}$/;
        var expreg = /MA-[A-Ñ]{1,6}-[0-9]{4}$/;

        if (comTotal.test(doc) && code != 8 && code != 13&& code != 9) {
            event.preventDefault();
        }
        else {
            if ((code > 47 && code < 58) || /* numeric (0-9) (code > 64 && code < 91) || /* upper alpha (A-Z)*/ (code > 95 && code < 105))// lower alpha (a-z)
            {
                //if ($('#idTipo').val() == "4")
                //{
                //    if (!doc.includes('EXP-MA-')) {
                //        $('#numeroDocumento').val('EXP-MA-');
                //    }
                //    else {
                //        $('#numeroDocumento').val(doc);
                //    }
                //}
                //else
                //{
                    if (!doc.includes('MA-' + nomenclatura)) {
                        $('#numeroDocumento').val('MA-' + nomenclatura);
                    }
                    else {
                        $('#numeroDocumento').val(doc);
                    }
                //}
            }
            else if (code == 8) {
                var del = /2018$/;

                if (del.test(doc)) {
                    doc = doc.substring(0, doc.length - 5);
                    $('#numeroDocumento').val(doc);
                }
                else {
                    if (doc.length < nomenclatura.length+4)
                    {

                        //if ($('#idTipo').val() == "4")
                        //{
                        //    if (!doc.includes('EXP-MA-'))
                        //    {
                        //        $('#numeroDocumento').val('EXP-MA-');
                        //        event.preventDefault();
                        //    }
                        //    else
                        //    {
                        //        event.preventDefault();
                        //    }
                        //}
                        //else
                        //{
                            if (!doc.includes('MA-' + nomenclatura))
                            {
                                $('#numeroDocumento').val('MA-' + nomenclatura);
                                event.preventDefault();
                            }
                            else if (doc.includes('MA-' + nomenclatura))
                            {
                                event.preventDefault();
                            }
                        //}
                    }
                }
            }
            else if ((code > 64 && code < 91)) {
                swal("¡Carácter invalido!", 'solo se permiten caracteres numéricos.', "error");
                event.preventDefault();
            }
            if (pat.test(doc)) {
                if ((code > 47 && code < 58) || (code > 96 && code < 105)) {
                    $('#numeroDocumento').val(doc + key + '-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
            else if (expreg.test(doc)) {

                if (code != 8) {
                    $('#numeroDocumento').val(doc + '-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
        }
    }
    );
    $('#numeroIngreso').keydown(function (e) {
        var key = e.key;
        var code = e.keyCode;
        var doc = $('#numeroIngreso').val();
        var comTotal = /N.I.[0-9]{4}-2018$/;
        var pat = /N.I.[0-9]{4}$/;
        var expreg = /N.I.[0-9]{3}$/;
        console.log(key);
        if (comTotal.test(doc) && code != 8 && code != 13 && code != 9) {
            event.preventDefault();
        }
        else {
            if ((code > 47 && code < 58) || /* numeric (0-9) (code > 64 && code < 91) || /* upper alpha (A-Z)*/ (code > 96 && code < 105))// lower alpha (a-z)
            {
                if (!doc.includes('N.I.')) {

                    $('#numeroIngreso').val('N.I.');
                }
                else {
                    $('#numeroIngreso').val(doc);
                }
            }
            else if (code == 8) {
                var del = /2018$/;
                if (del.test(doc)) {
                    doc = doc.substring(0, doc.length - 5);
                    $('#numeroIngreso').val(doc);
                }
                else {
                    if (doc.length < 5) {
                        if (!doc.includes('N.I.')) {
                            $('#numeroIngreso').val('N.I.');
                            event.preventDefault();
                        }
                        else if (doc.includes('N.I.') && key == 'Backspace') {
                            $('#numeroIngreso').val('N.I.');
                            event.preventDefault();
                        }
                    }
                }
            }
            else if ((code > 64 && code < 91)) {
                swal("¡Carácter invalido!", 'solo se permiten caracteres numéricos.', "error");
                event.preventDefault();
            }
            if (pat.test(doc)) {
                if ((code > 47 && code < 58) || (code > 96 && code < 105)) {
                    $('#numeroIngreso').val(doc + key + '-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
            else if (expreg.test(doc)) {
                if (code != 8) {
                    $('#numeroIngreso').val(doc + key + '-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
        }
    }
    );

    $('#parte').keydown(function (e) {
        var key = e.key;
        var code = e.keyCode;
        var doc = $('#parte').val();
        var comTotal = /EXP-AD-[a-zA-ZñÑ0-9]+-2018$/;
        var pat = /EXP-AD-[a-zA-ZñÑ0-9]+/;
        var expreg = /EXP-AD-[a-zA-ZñÑ0-9]+-/;
        console.log(code);
        if (comTotal.test(doc) && code != 8 && code != 13 && code != 9) {
            event.preventDefault();
        }
        else {
            if ((code > 47 && code < 58) || /* numeric (0-9) */(code > 64 && code < 91) || /* upper alpha (A-Z)*/ (code > 95 && code < 105) || code == 109|| code ==192)// lower alpha (a-z)
            {
                if (code == 109)
                {
                    event.preventDefault();
                }
                if (!doc.includes('EXP-AD-')) {

                    $('#parte').val('EXP-AD-');
                }
                else {
                    $('#parte').val(doc);
                }

            }
            else if (code == 8) {
                console.log($('#parte').val());
                var del = /2018$/;
                if (del.test(doc)) {
                    doc = doc.substring(0, doc.length - 5);
                    $('#parte').val(doc);
                }
                else {
                    console.log($('#parte').val());
                    if (doc.length < 8) {
                        if (!doc.includes('EXP-AD-')) {
                            $('#parte').val('EXP-AD-');
                            event.preventDefault();
                        }
                        else if (doc.includes('EXP-AD-') && key == 'Backspace') {
                            $('#parte').val('EXP-AD-');
                            event.preventDefault();
                        }
                    }
                }
            }
            else if ((code < 65 || code > 105) && (code < 48 || code > 57) && (code < 48 || code > 57) && code != 109 && code != 20 && code != 192)
            {
                swal("¡Carácter invalido!", 'solo se permiten caracteres alfanuméricos.', "error");
                event.preventDefault();
            }
            if (pat.test(doc))
            {
                console.log($('#parte').val());
                if ((code ==109))
                {
                    $('#parte').val(doc + '-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
            else if (expreg.test(doc))
            {
                console.log($('#parte').val());
                if (code != 8 && (code == 109))
                {
                    $('#parte').val(doc +  '-' + (new Date()).getFullYear());
                    event.preventDefault();
                }
            }
        }
    }
    );

    $('#idTipo').change(function ()
    {
        var nomenclatura;
        console.log(nomenclatura);
        console.log(nomenclatura);
        if ($("#tipoOrigen").val() == "5") {
            switch ($("#idOrigen").val()) {
                case "10": nomenclatura = "PSI-";
                    break;
                case "11": nomenclatura = "PRH-";
                    break;
                case "24": nomenclatura = "AAM-";
                    break;
                case "25": nomenclatura = "SAAM-";
                    break;
                case "26": nomenclatura = "AAAA-";
                    break;
                case "27": nomenclatura = "SAT-";
                    break;
                case "28": nomenclatura = "A-";
                    break;
                case "29": nomenclatura = "AAP-";
                    break;
                case "30": nomenclatura = "AAPRT-";
                    break;
                case "31": nomenclatura = "AAS-";
                    break;
                case "32": nomenclatura = "PAM-";
                    break;
                case "33": nomenclatura = "ALCM-";
                    break;
                case "34": nomenclatura = "AAI-";
                    break;
                case "35": nomenclatura = "AI-";
                    break;
                case "36": nomenclatura = "ABI-";
                    break;
                case "37": nomenclatura = "ABM-";
                    break;
                case "38": nomenclatura = "ACE-";
                    break;
                case "39": nomenclatura = "ACM-";
                    break;
                case "40": nomenclatura = "CMEA-";
                    break;
                case "41": nomenclatura = "PCD-";
                    break;
                case "42": nomenclatura = "CM-";
                    break;
                case "43": nomenclatura = "SC-";
                    break;
                case "44": nomenclatura = "AAAACC-";
                    break;
                case "45": nomenclatura = "PCS-";
                    break;
                case "46": nomenclatura = "ACC-";
                    break;
                case "47": nomenclatura = "PCFU-";
                    break;
                case "48": nomenclatura = "SCI-";
                    break;
                case "49": nomenclatura = "SCP-";
                    break;
                case "50": nomenclatura = "ADM-";
                    break;
                case "51": nomenclatura = "AD-";
                    break;
                case "52": nomenclatura = "SDC-";
                    break;
                case "53": nomenclatura = "ADCDR-";
                    break;
                case "54": nomenclatura = "PDO-";
                    break;
                case "55": nomenclatura = "PDS-";
                    break;
                case "56": nomenclatura = "PDSCEC-";
                    break;
                case "57": nomenclatura = "DGP-";
                    break;
                case "58": nomenclatura = "SGA-";
                    break;
                case "59": nomenclatura = "AGC-";
                    break;
                case "60": nomenclatura = "AGIRS-";
                    break;
                case "61": nomenclatura = "SGV-";
                    break;
                case "62": nomenclatura = "PH-";
                    break;
                case "63": nomenclatura = "PHM-";
                    break;
                case "64": nomenclatura = "AIM-";
                    break;
                case "65": nomenclatura = "SIS-";
                    break;
                case "66": nomenclatura = "AJCA-";
                    break;
                case "67": nomenclatura = "ALV-";
                    break;
                case "68": nomenclatura = "AMPZV-";
                    break;
                case "69": nomenclatura = "AM-";
                    break;
                case "70": nomenclatura = "SOIP-";
                    break;
                case "71": nomenclatura = "AOM-";
                    break;
                case "72": nomenclatura = "APC-";
                    break;
                case "73": nomenclatura = "AP-";
                    break;
                case "74": nomenclatura = "PPCI-";
                    break;
                case "75": nomenclatura = "PP-";
                    break;
                case "76": nomenclatura = "SPU-";
                    break;
                case "77": nomenclatura = "APG-";
                    break;
                case "78": nomenclatura = "PRE-";
                    break;
                case "79": nomenclatura = "SP-";
                    break;
                case "80": nomenclatura = "SO-";
                    break;
                case "81": nomenclatura = "SM-";
                    break;
                case "82": nomenclatura = "PSMCV-";
                    break;
                case "83": nomenclatura = "SPSA-";
                    break;
                case "84": nomenclatura = "SSA-";
                    break;
                case "85": nomenclatura = "PSJ-";
                    break;
                case "86": nomenclatura = "SSISC-";
                    break;
                case "87": nomenclatura = "SSISCT-";
                    break;
                case "88": nomenclatura = "TM-";
                    break;
                case "89": nomenclatura = "ST-";
                    break;
                case "90": nomenclatura = "VA-";
                    break;
                default: nomenclatura = "PMM-";
                    break;
            }
        }
        else {
            nomenclatura = "PMM-";
        }
        $("#numeroDocumento").val('');
        $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
        console.log(nomenclatura);
        if ($('#idTipo').val() == "4")
        {
            $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
            $('#Expediente').show();
            $('#partes').show();
            $('#numIngreso').show();
            $('#numeroDocumento').val('');
            $('#numeroIngreso').val('');
        }
        else if ($('#idTipo').val() == "3")
        {
            $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
            $('#Expediente').hide();
            $('#partes').hide();
            $('#numIngreso').show();
            $('#numeroDocumento').val('');
            $('#numeroIngreso').val('');
        }
        else
        {
            $('#numeroDocumento').attr('placeholder', 'MA-' + nomenclatura + '####-2018');
            $('#numIngreso').hide();
            $('#partes').hide();
            $('#Expediente').hide();
            $('#numeroDocumento').val('');
            $('#numeroIngreso').val('');
        }
    }
    );

    $(document).ready(function () {

        $("#imageBrowes").change(function () {

            var File = this.files;
            //var anyWindow = window.URL || window.webkitURL;
            //target = "#targetImg";
            //imgPreview = "#imgPreview";
            for (var i = 0; i < File.length; i++) {
                //    var objectUrl = anyWindow.createObjectURL(File[i]);
                //    $('.preview-area').append('<img class="img-responsive"src="' + objectUrl + '" />');
                //    window.URL.revokeObjectURL(File[i]);

                //}
                //    //if (i = 1) {
                //    //    target = target + "2";
                //    //    imgPreview = imgPreview + "2";
                //    //}
                ReadImage(File[i]);
            }
        })
    });
    var ReadImage = function (file) {

        var reader = new FileReader;
        var image = new Image;
        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 1024) + "KB";

                $("#targetImg").attr('src', _file.target.result);
                $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                $("#imgPreview").show();

            }

        }

    };
    function closeModal() {
        $(function () {
            $('#crearModal').modal('hide');
        });
    }
    var ClearPreview = function () {
        $("#imageBrowes").val('');
        $("#description").text('');
        $("#imgPreview").hide();
        $("#imgPreview2").hide();
    };
</script>
