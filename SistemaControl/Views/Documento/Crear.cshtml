@model BackEnd.Model.Documento
<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <span class="modal-title" id="exampleModalLabel">Crear oficio</span>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div id="contenidoModal">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    int i = 0;
                    <div class="form-horizontal" id="parent">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.idDocumento)

                        <div class="form-group">
                            @Html.LabelFor(model => model.numeroDocumento, "Número de Oficio:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.numeroDocumento, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.numeroDocumento, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.numeroIngreso, "Oficio:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <textarea id="text"></textarea>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.numeroIngreso, "Número de Ingreso:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.numeroIngreso, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.numeroIngreso, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.idTipo, "Tipo de Documento:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control", onchange = "AdditionalsChanged()" })
                                @Html.ValidationMessageFor(model => model.idTipo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fecha, "Fecha:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.fecha, new { @type = "date", @class = "form-control datepicker"@*, @Value = Model.fecha.ToString("yyyy-MM-dd")*@})
                                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.asunto, "Asunto:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.asunto, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.asunto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="Expediente">
                            @Html.LabelFor(model => model.ubicacion, "Ubicación:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ubicacion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.descripcion, 10, 52, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.observacion, 10, 62, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                }
                
                <div class="form-group">
                    <div class="btn btn-primary">
                        <input type="file" id="imageBrowes" multiple="multiple" />
                    </div>


                    <div id="imgPreview" class="thumbnail" style="display:none">
                        <img class="img-responsive" id="targetImg" />
                        <div class="caption">
                            <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                            <span id="description"></span>
                        </div>
                    </div>

                </div>
                @*<div id="imgPreview2" class="thumbnail" style="display:none">
            <img class="img-responsive" id="targetImg2" />
            <div class="caption">
                <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                <span id="description"></span>
            </div>
        </div>
        <div class="preview-area"></div>
        <div class="caption">
            <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
            <span id="description"></span>
        </div>*@


                <div class="modal-footer">
                    <button type="button" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Cerrar</a></button>
                    <button type="button" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Guardar cambios</a></button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    CKEDITOR.replace("text");
</script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>

    $(document).ready(function () {

        $("#imageBrowes").change(function () {

            var File = this.files;
            //var anyWindow = window.URL || window.webkitURL;
            //target = "#targetImg";
            //imgPreview = "#imgPreview";
            for (var i = 0; i < File.length; i++) {
                //    var objectUrl = anyWindow.createObjectURL(File[i]);
                //    $('.preview-area').append('<img class="img-responsive"src="' + objectUrl + '" />');
                //    window.URL.revokeObjectURL(File[i]);

                //}
                //    //if (i = 1) {
                //    //    target = target + "2";
                //    //    imgPreview = imgPreview + "2";
                //    //}
                ReadImage(File[i]);
            }
        })
    });


    var ReadImage = function (file) {

        var reader = new FileReader;
        var image = new Image;
        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 1024) + "KB";

                $("#targetImg").attr('src', _file.target.result);
                $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                $("#imgPreview").show();

            }

        }

    };

    var ClearPreview = function () {
        $("#imageBrowes").val('');
        $("#description").text('');
        $("#imgPreview").hide();
        $("#imgPreview2").hide();

    }


    window.onload = function () {
        $(".Expediente").hide();
    }
    $(document).ready(function () {
        $("#idTipo").change(function () {
            var a = $("#idTipo Option:Selected").text();
            $("Oficio").text(a);
        })
    });
    function AdditionalsChanged() {

        var tipo = document.getElementById("idTipo");
        idTipo = tipo.value;

        if (idTipo == "4") {

            $(document).ready(function () {
                $.each($('#Expediente'), function () {
                    $("#Expediente").show();
                });
                $.each($('#Oficio'), function () {
                    $("#Oficio").hide();
                });
            });


            //alert($('[id=Expediente]').length);
            //alert($('[id=Oficio]').length);
            //$(".Expediente").hide();
            //$(".Oficio").show();
            //var elements = document.getElementsByTagName("Oficio");
            //for (var i = 0, length = elements.length; i < length; i++) {
            //        elements[i].style.display = 'none';
            //}
            //var elements = document.getElementsByTagName("Expediente");
            //for (var i = 0, length = elements.length; i < length; i++) {
            //    elements[i].style.display = '';
            //}
        } else {
            $(document).ready(function () {
                $.each($('#Oficio'), function () {
                    $("#Oficio").show();
                });
                $.each($('#Expediente'), function () {
                    $("#Expediente").hide();
                });
            });

            //alert($('[id=Expediente]').length);
            //alert($('[id=Oficio]').length);
            //$(".Oficio").hide();
            //$(".Expediente").show();
            //var elements = document.getElementsByTagName("Oficio");
            //for (var i = 0, length = elements.length; i < length; i++) {
            //    elements[i].style.display = '';
            //}
            //var elements = document.getElementsByTagName("Expediente");
            //for (var i = 0, length = elements.length; i < length; i++) {
            //    elements[i].style.display = 'none';
            //}
        }
    }
</script>