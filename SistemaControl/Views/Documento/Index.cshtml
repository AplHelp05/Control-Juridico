@model PagedList.IPagedList<BackEnd.Model.Documento>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using PagedList.Mvc;


<script src="~/Content/js/site.js"></script>
<link href="~/Content/css/style.css" rel="stylesheet" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<div class="title">Oficios</div>
<div class="container" style="margin-top:20px">
    @using (Html.BeginForm("Index", "Documento", FormMethod.Get))
    {
        <div class="widget" style="height:100px;">
            <div class="title">
                <span class="form-inline">
                    <i class="fa fa-search" aria-hidden="true"></i>
                    @Html.TextBox("search") <input type="submit" name="submit" value="Buscar" style="color:black; font-size:14px;" />
                </span>

                <div style="color:black; font-size:14px;">
                    <b> Opciones de busqueda: </b>
                    @Html.RadioButton("option", "Número de oficio") <text>Número de oficio</text>
                    @Html.RadioButton("option", "Número de Ingreso") <text> Número de Ingreso </text>
                    @Html.RadioButton("option", "Asunto") <text>Asunto</text>
                    @Html.RadioButton("option", "Fecha") <text>Fecha </text>

                </div>
            </div>
        </div>

    }
        <table class="table table-bordered">
            <tr class="trfirst">
                <th>Número de oficio</th>
                <th>Número de Ingreso</th>
                <th>Fecha</th>
                <th>Asunto</th>
                <th>Descripción</th>
                <th>Ubicación</th>
                <th>Observación</th>
                <th></th>
            </tr>
            @if (Model.Count() == 0)
            {
                <tr>
                    <td align="center" colspan="8">No se encontraron coincidencias</td>
                </tr>
            }
            else
            {
                for (int i = 0; i < Model.Count(); i++)
                {
                    <tr>
                        <td>@Model[i].numeroDocumento</td>
                        <td>@Model[i].numeroIngreso</td>
                        <td>@Model[i].fecha</td>
                        <td>@Model[i].asunto</td>
                        <td>@Model[i].descripcion</td>
                        <td>@Model[i].ubicacion</td>
                        <td>@Model[i].observacion</td>
                        <td><a href="#" id="btnEdit" class="btnEdit" data-value="@Model[i].idDocumento" data-toggle="modal" data-target="#exampleModal">Editar</a> | <a href="#" id="btnEdit" class="btnEdit" data-value="@Model[i].idDocumento" data-toggle="modal" data-target="#modalReply">Contestar</a></td>
                    </tr>

                }
            }
        </table>
        <br />

        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="position: fixed">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <span class="modal-title" id="exampleModalLabel">Editar oficio</span>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="contenidoModal">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                int i = 0;
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model[i].idDocumento)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].numeroDocumento, "Número de Oficio:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].numeroDocumento, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].numeroDocumento, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].numeroIngreso, "Número de Ingreso:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].numeroIngreso, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].numeroIngreso, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idTipo, "Tipo de Documento:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].idTipo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].fecha, "Fecha:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model[i].fecha, new { @type = "date", @class = "form-control datepicker", @Value = Model[i].fecha.ToString("yyyy-MM-dd") })
                                            @Html.ValidationMessageFor(model => model[i].fecha, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].asunto, "Asunto:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].asunto, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].asunto, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].descripcion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].ubicacion, "Ubicación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].ubicacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model[i].observacion, 10, 62, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].observacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                            <input type="file" name="elementName" multiple="multiple" />

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Cerrar</a></button>
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Guardar cambios</a></button>
                    </div>
                </div>
            </div>
        </div>

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }))
        Mostrando @Model.FirstItemOnPage de @Model.LastItemOnPage de @Model.TotalItemCount documentos
        <div>
            <button type="button" class="btn btn-primary"><a href="#" id="btnEdit" style="color:white;" class="btnEdit" data-value="@Model[0].idDocumento" data-toggle="modal" data-target="#modalAgregar">Agregar oficio</a></button>
        </div>


        <div class="modal fade" id="modalAgregar" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="position: absolute">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <span class="modal-title" id="exampleModalLabel">Agregar nuevo documento</span>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="contenidoModal">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                int i = 0;
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(Model => Model[i].idDocumento)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].numeroDocumento, "Número de Documento:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].numeroDocumento, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].numeroDocumento, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].numeroIngreso, "Número de Ingreso:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].numeroIngreso, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].numeroIngreso, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idTipo, "Tipo de Documento:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].idTipo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].fecha, "Fecha:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model[i].fecha, new { @type = "date", @class = "form-control datepicker", @Value = Model[i].fecha.ToString("yyyy-MM-dd") })
                                            @Html.ValidationMessageFor(model => model[i].fecha, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].asunto, "Asunto:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].asunto, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].asunto, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].descripcion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].ubicacion, "Ubicación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].ubicacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model[i].observacion, 10, 62, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].observacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                            <input type="file" name="elementName" multiple="multiple" />

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Cerrar</a></button>
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Guardar cambios</a></button>
                    </div>
                </div>
            </div>
        </div>


        <div class="modal fade" id="modalReply" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="position: absolute">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <span class="modal-title" id="exampleModalLabel">Respuesta a:</span>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="contenidoModal">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                int i = 0;
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(Model => Model[i].idDocumento)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].numeroDocumento, "Documento Vinculado:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].numeroDocumento, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            @Html.ValidationMessageFor(model => model[i].numeroDocumento, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idTipo, "Tipo de Documento:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(model => model[i].idTipo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].fecha, "Fecha:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model[i].fecha, new { @type = "date", @class = "form-control datepicker", @Value = Model[i].fecha.ToString("yyyy-MM-dd") })
                                            @Html.ValidationMessageFor(model => model[i].fecha, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].asunto, "Asunto:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].asunto, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].asunto, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].descripcion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].ubicacion, "Ubicación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].ubicacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model[i].observacion, 10, 62, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].observacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                            <input type="file" name="elementName" multiple="multiple" />

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Cerrar</a></button>
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Documento/Index">Guardar cambios</a></button>
                    </div>
                </div>
            </div>
        </div>




    </div>